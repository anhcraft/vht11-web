(global.webpackChunkvht11=global.webpackChunkvht11||[]).push([["C:\\Users\\huynh\\IdeaProjects\\vht11\\node_modules\\mathjax-full\\js\\output\\common\\FontData"],{"./node_modules/mathjax-full/js/output/common/FontData.js":function(t,r){"use strict";var a=this&&this.__assign||function(){return(a=Object.assign||function(t){for(var r,a=1,e=arguments.length;a<e;a++)for(var i in r=arguments[a])Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i]);return t}).apply(this,arguments)},e=this&&this.__read||function(t,r){var a="function"==typeof Symbol&&t[Symbol.iterator];if(!a)return t;var e,i,s=a.call(t),n=[];try{for(;(void 0===r||r-- >0)&&!(e=s.next()).done;)n.push(e.value)}catch(t){i={error:t}}finally{try{e&&!e.done&&(a=s.return)&&a.call(s)}finally{if(i)throw i.error}}return n},i=this&&this.__spread||function(){for(var t=[],r=0;r<arguments.length;r++)t=t.concat(e(arguments[r]));return t},s=this&&this.__values||function(t){var r="function"==typeof Symbol&&Symbol.iterator,a=r&&t[r],e=0;if(a)return a.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&e>=t.length&&(t=void 0),{value:t&&t[e++],done:!t}}};throw new TypeError(r?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(r,"__esModule",{value:!0}),r.FontData=r.NOSTRETCH=r.H=r.V=void 0,r.V=1,r.H=2,r.NOSTRETCH={dir:0};var n=function(){function t(){var t,r;this.variant={},this.delimiters={},this.cssFontMap={},this.remapChars={};var e=this.constructor;this.params=a({},e.defaultParams),this.sizeVariants=i(e.defaultSizeVariants),this.cssFontMap=a({},e.defaultCssFonts),this.cssFamilyPrefix=e.defaultCssFamilyPrefix,this.createVariants(e.defaultVariants),this.defineDelimiters(e.defaultDelimiters);try{for(var n=s(Object.keys(e.defaultChars)),o=n.next();!o.done;o=n.next()){var l=o.value;this.defineChars(l,e.defaultChars[l])}}catch(r){t={error:r}}finally{try{o&&!o.done&&(r=n.return)&&r.call(n)}finally{if(t)throw t.error}}this.defineRemap("accent",e.defaultAccentMap),this.defineRemap("mo",e.defaultMoMap),this.defineRemap("mn",e.defaultMnMap)}return t.charOptions=function(t,r){var a=t[r];return 3===a.length&&(a[3]={}),a[3]},t.prototype.createVariant=function(t,r,a){void 0===r&&(r=null),void 0===a&&(a=null);var e={linked:[],chars:r?Object.create(this.variant[r].chars):{}};a&&this.variant[a]&&(Object.assign(e.chars,this.variant[a].chars),this.variant[a].linked.push(e.chars),e.chars=Object.create(e.chars)),this.remapSmpChars(e.chars,t),this.variant[t]=e},t.prototype.remapSmpChars=function(t,r){var a,i,n,o,l=this.constructor;if(l.VariantSmp[r]){var c=l.SmpRemap,f=[null,null,l.SmpRemapGreekU,l.SmpRemapGreekL];try{for(var u=s(l.SmpRanges),p=u.next();!p.done;p=u.next()){var h=e(p.value,3),d=h[0],m=h[1],b=h[2],y=l.VariantSmp[r][d];if(y){for(var v=m;v<=b;v++)if(930!==v){var g=y+v-m;t[v]=this.smpChar(c[g]||g)}if(f[d])try{for(var _=(n=void 0,s(Object.keys(f[d]).map((function(t){return parseInt(t)})))),C=_.next();!C.done;C=_.next()){t[v=C.value]=this.smpChar(y+f[d][v])}}catch(t){n={error:t}}finally{try{C&&!C.done&&(o=_.return)&&o.call(_)}finally{if(n)throw n.error}}}}}catch(t){a={error:t}}finally{try{p&&!p.done&&(i=u.return)&&i.call(u)}finally{if(a)throw a.error}}}"bold"===r&&(t[988]=this.smpChar(120778),t[989]=this.smpChar(120779))},t.prototype.smpChar=function(t){return[,,,{smp:t}]},t.prototype.createVariants=function(t){var r,a;try{for(var e=s(t),i=e.next();!i.done;i=e.next()){var n=i.value;this.createVariant(n[0],n[1],n[2])}}catch(t){r={error:t}}finally{try{i&&!i.done&&(a=e.return)&&a.call(e)}finally{if(r)throw r.error}}},t.prototype.defineChars=function(t,r){var a,e,i=this.variant[t];Object.assign(i.chars,r);try{for(var n=s(i.linked),o=n.next();!o.done;o=n.next()){var l=o.value;Object.assign(l,r)}}catch(t){a={error:t}}finally{try{o&&!o.done&&(e=n.return)&&e.call(n)}finally{if(a)throw a.error}}},t.prototype.defineDelimiters=function(t){Object.assign(this.delimiters,t)},t.prototype.defineRemap=function(t,r){this.remapChars.hasOwnProperty(t)||(this.remapChars[t]={}),Object.assign(this.remapChars[t],r)},t.prototype.getDelimiter=function(t){return this.delimiters[t]},t.prototype.getSizeVariant=function(t,r){return this.delimiters[t].variants&&(r=this.delimiters[t].variants[r]),this.sizeVariants[r]},t.prototype.getChar=function(t,r){return this.variant[t].chars[r]},t.prototype.getVariant=function(t){return this.variant[t]},t.prototype.getCssFont=function(t){return this.cssFontMap[t]||["serif",!1,!1]},t.prototype.getFamily=function(t){return this.cssFamilyPrefix?this.cssFamilyPrefix+", "+t:t},t.prototype.getRemappedChar=function(t,r){return(this.remapChars[t]||{})[r]},t.OPTIONS={},t.defaultVariants=[["normal"],["bold","normal"],["italic","normal"],["bold-italic","italic","bold"],["double-struck","bold"],["fraktur","normal"],["bold-fraktur","bold","fraktur"],["script","italic"],["bold-script","bold-italic","script"],["sans-serif","normal"],["bold-sans-serif","bold","sans-serif"],["sans-serif-italic","italic","sans-serif"],["sans-serif-bold-italic","bold-italic","bold-sans-serif"],["monospace","normal"]],t.defaultCssFonts={normal:["serif",!1,!1],bold:["serif",!1,!0],italic:["serif",!0,!1],"bold-italic":["serif",!0,!0],"double-struck":["serif",!1,!0],fraktur:["serif",!1,!1],"bold-fraktur":["serif",!1,!0],script:["cursive",!1,!1],"bold-script":["cursive",!1,!0],"sans-serif":["sans-serif",!1,!1],"bold-sans-serif":["sans-serif",!1,!0],"sans-serif-italic":["sans-serif",!0,!1],"sans-serif-bold-italic":["sans-serif",!0,!0],monospace:["monospace",!1,!1]},t.defaultCssFamilyPrefix="",t.VariantSmp={bold:[119808,119834,120488,120514,120782],italic:[119860,119886,120546,120572],"bold-italic":[119912,119938,120604,120630],script:[119964,119990],"bold-script":[120016,120042],fraktur:[120068,120094],"double-struck":[120120,120146,,,120792],"bold-fraktur":[120172,120198],"sans-serif":[120224,120250,,,120802],"bold-sans-serif":[120276,120302,120662,120688,120812],"sans-serif-italic":[120328,120354],"sans-serif-bold-italic":[120380,120406,120720,120746],monospace:[120432,120458,,,120822]},t.SmpRanges=[[0,65,90],[1,97,122],[2,913,937],[3,945,969],[4,48,57]],t.SmpRemap={119893:8462,119965:8492,119968:8496,119969:8497,119971:8459,119972:8464,119975:8466,119976:8499,119981:8475,119994:8495,119996:8458,120004:8500,120070:8493,120075:8460,120076:8465,120085:8476,120093:8488,120122:8450,120127:8461,120133:8469,120135:8473,120136:8474,120137:8477,120145:8484},t.SmpRemapGreekU={8711:25,1012:17},t.SmpRemapGreekL={977:27,981:29,982:31,1008:28,1009:30,1013:26,8706:25},t.defaultAccentMap={768:"ˋ",769:"ˊ",770:"ˆ",771:"˜",772:"ˉ",774:"˘",775:"˙",776:"¨",778:"˚",780:"ˇ",8594:"⃗",8242:"'",8243:"''",8244:"'''",8245:"`",8246:"``",8247:"```",8279:"''''",8400:"↼",8401:"⇀",8406:"←",8417:"↔",8432:"*",8411:"...",8412:"....",8428:"⇁",8429:"↽",8430:"←",8431:"→"},t.defaultMoMap={45:"−"},t.defaultMnMap={45:"−"},t.defaultParams={x_height:.442,quad:1,num1:.676,num2:.394,num3:.444,denom1:.686,denom2:.345,sup1:.413,sup2:.363,sup3:.289,sub1:.15,sub2:.247,sup_drop:.386,sub_drop:.05,delim1:2.39,delim2:1,axis_height:.25,rule_thickness:.06,big_op_spacing1:.111,big_op_spacing2:.167,big_op_spacing3:.2,big_op_spacing4:.6,big_op_spacing5:.1,surd_height:.075,scriptspace:.05,nulldelimiterspace:.12,delimiterfactor:901,delimitershortfall:.3,min_rule_thickness:1.25},t.defaultDelimiters={},t.defaultChars={},t.defaultSizeVariants=[],t}();r.FontData=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,